openapi: "3.0.2"
info:
  title: API User
  version: "1.0"
servers:
  - url: http://localhost:8080/{basePath}/{version}
    description: local dev url
    variables:
      basePath:
        enum:
          - 'api'
        default: 'api'
      version:
        enum:
          - 'v1'
        default: 'v1'
tags:
  - name: User
    description: Operaciones relacionadas con usuarios.
  - name: Doctor
    description: Operaciones relacionadas con doctores.
paths:
  '/user':
    get:
      tags:
        - User
      summary: Obtener todos los usuarios
      operationId: getUsers
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /user/{userId}:
    get:
      tags:
        - User
      summary: Obtener usuario por ID
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: NOT FOUND
  '/doctor':
    get:
      tags:
        - Doctor
      summary: Obtener todos los doctores
      operationId: getDoctors # Debe coincidir con el método en el Delegate
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Doctor' # Referencia al nuevo esquema
  '/doctor/{doctorId}':
    get:
      tags:
        - Doctor
      summary: Obtener doctor por ID
      operationId: getDoctorById # Debe coincidir con el método en el Delegate
      parameters:
        - name: doctorId
          in: path
          required: true
          schema:
            type: integer # El ID de DoctorEntity es Integer
            format: int64 # Usar int32 para Integer o int64 para Long
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Doctor'
        '404': # Manejado por el ExceptionHandler
          description: Doctor no encontrado
          # Puedes añadir un schema de error aquí si quieres ser más explícito


components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Identificador único del usuario
        name:
          type: string
          description: Nombre del usuario
        address:
          type: string
          description: Dirección del usuario
        age:
          type: integer
          description: Edad del usuario
        phone:
          type: string
          description: Número de teléfono del usuario
        email:
          type: string
          description: Correo electrónico del usuario
        password:
          type: string
          description: Contraseña del usuario
          format: password
        role:
          type: string
          description: Rol del usuario
          example: admin, doctor, patient, staff
          enum:
            - admin
            - doctor
            - patient
            - staff
        status:
          type: string
          description: Estado del usuario
          example: active, inactive, suspended, pending
          enum:
            - active
            - inactive
            - suspended
            - pending
        createdAt:
          type: string
          format: date-time
          description: Fecha y hora de creación del usuario
        updatedAt:
          type: string
          format: date-time
          description: Fecha y hora de la última actualización del usuario
    Doctor: # Nuevo esquema para DoctorDto
      type: object
      properties:
        id:
          type: integer
          format: int32 # Coincide con el tipo Integer
          description: Identificador único del doctor
        userId:
          type: integer
          format: int64 # El ID de User es Long
          description: ID del usuario asociado
        firstName:
          type: string
          description: Nombre del doctor
        lastName:
          type: string
          description: Apellido del doctor
        specialtyId:
          type: integer
          format: int32
          description: ID de la especialidad
        licenseNumber:
          type: string
          description: Número de licencia del doctor
        phone:
          type: string
          description: Número de teléfono del doctor
        email:
          type: string
          description: Correo electrónico del doctor
        hireDate:
          type: string
          format: date # LocalDate se mapea a 'date'
          description: Fecha de contratación
        active:
          type: boolean
          description: Indica si el doctor está activo
        createdAt:
          type: string
          format: date-time # Instant se mapea a 'date-time'
          description: Fecha y hora de creación
        updatedAt:
          type: string
          format: date-time
          description: Fecha y hora de la última actualización
